---
title: "Plant P Status analysis"
format: html
---

```{r}

library(BiocManager)
library(remotes)
library(phyloseq)
library(ggplot2)
library(ampvis2)
library(rbiom)
library(vegan)
library(microViz)
library(patchwork)
library(corncob)
library(DT)
library(ggraph)
library(ggtext)
library(microbiome)
library(ggpubr)

sessionInfo()

```

```{r}
install.packages("devtools")
install.packages("BiocManager")
remotes::install_github("kasperskytte/ampvis2", Ncpus = 6)
install.packages("vegan")
install.packages("rbiom")
BiocManager::install("phyloseq", force = TRUE)
install.packages("ggplot2")
install.packages("remotes")
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install(c("microbiome", "ComplexHeatmap"), update = FALSE)

install.packages("ggtext") 
install.packages("ggraph") 
install.packages("DT")
install.packages("corncob")
install.packages(
  "microViz",
  repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos"))
)
install.packages("patchwork")
```

```{r}

ps = readRDS("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/ps_obj.rds")


d <- amp_load(
  otutable = ps,
  metadata = metadata,
  taxonomy = taxa
)

d %>%
amp_subset_samples(Treatment %in% "Mock") %>%
 amp_heatmap(group_by = "SampleID",
             tax_show = 30,
            tax_aggregate = "Genus",
            )
```

```{r}
#| label: Ordination plots

Main_ordination <- d %>%
  amp_subset_samples(Treatment %in% c("P30_+_0.075_M_foliar_P", "P30_+_0.15_M_foliar_P", "P30", "P60")) %>%
  amp_ordinate(distmeasure = "bray",
               filter_species = 0.1,
               type = "pcoa",
               sample_color_by = "Treatment",
               sample_colorframe = TRUE,
               transform = "hellinger")

ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Main_ordination.png", width = 10, height = 8, bg = 'white', print(Main_ordination))
```

```{r}
time_ordination <- d %>%
  amp_subset_samples(Treatment %in% c("P30", "P60", "P30_-_early_harvest", "P60_-_early_harvest")) %>%
  amp_subset_samples(!Treatment %in% "Mock") %>%
  amp_ordinate(distmeasure = "bray",
               filter_species = 0.1,
               type = "pcoa",
               sample_color_by = "Treatment",
               sample_colorframe = TRUE,
               transform = "hellinger")
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/time_ordination.png", width = 10, height = 8, bg = 'white', print(time_ordination))
```

```{r}
Full_ordination <- d %>%
  amp_subset_samples(!Treatment %in% c("Mock", "P30_no_plant")) %>%
  amp_ordinate(distmeasure = "bray",
               filter_species = 0.1,
               type = "pcoa",
               sample_color_by = "Treatment",
               sample_colorframe = TRUE,
               transform = "hellinger")

ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Full_ordination.png", width = 10, height = 8, bg = 'white', print(Full_ordination))
```

```{r}
d %>%
  amp_subset_samples(Treatment %in% c("P30", "P30_no_SG")) %>%
  amp_ordinate(distmeasure = "bray",
               filter_species = 0.1,
               type = "pcoa",
               sample_color_by = "Treatment",
               sample_colorframe = TRUE,
               transform = "hellinger")
```

```{r}
Mainheatmap <- d %>%
  amp_subset_samples(Treatment %in% c("P30_+_0.075_M_foliar_P", "P30_+_0.15_M_foliar_P", "P30", "P60")) %>%
  amp_subset_samples(Timepoint %in% "T2") %>%
  amp_heatmap(facet_by = "Treatment",
              tax_aggregate = "Genus",
              showRemainingTaxa=TRUE,
              tax_show = 25)
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Main_heatmap.png", width = 13, height = 8, print(Mainheatmap))
```

h

```{r}

Mainheatmap_averaged <- d %>%
  amp_subset_samples(Treatment %in% c("P30_+_0.075_M_foliar_P", "P30_+_0.15_M_foliar_P", "P30", "P60", "P30_no_plant")) %>%
  amp_subset_samples(Timepoint %in% "T2") %>%
  amp_merge_replicates(merge_var = "Treatment", round = NULL) %>%
  amp_heatmap(tax_aggregate = "Genus",
              showRemainingTaxa=TRUE,
              tax_show = 25)
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Main_heatmap_averaged_bulk.png", width = 10, height = 8, print(Mainheatmap_averaged))
```

```{r}

Mainheatmap_phylum <- d %>%
  amp_subset_samples(Treatment %in% c("P30_+_0.075_M_foliar_P", "P30_+_0.15_M_foliar_P", "P30", "P60")) %>%
  amp_subset_samples(Timepoint %in% "T2") %>%
  amp_heatmap(facet_by = "Treatment",
              tax_aggregate = "Phylum",
              showRemainingTaxa=TRUE,
              tax_show = 10)
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Main_heatmap_phylum.png", width = 13, height = 8, print(Mainheatmap_phylum))
```

```{r}
earlyheatmap <- d %>%
  amp_subset_samples(Treatment %in% c("P30_-_early_harvest", "P30")) %>%
  amp_heatmap(facet_by = "Timepoint",
              tax_aggregate = "Genus",
              showRemainingTaxa=TRUE,
              tax_show = 25)
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/early_heatmap.png", width = 13, height = 8, print(earlyheatmap))
```

```{r}
P60_heatmap <- d %>%
  amp_subset_samples(Treatment %in% c("P60_-_early_harvest", "P60")) %>%
  amp_heatmap(facet_by = "Treatment",
              tax_aggregate = "Genus",
              showRemainingTaxa=TRUE,
              tax_show = 25)
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/P60_heatmap.png", width = 13, height = 8, print(P60_heatmap))
```

```{r}
bulk_time_heatmap <- d %>%
  amp_subset_samples(Treatment %in% "P30_no_plant") %>%
  amp_heatmap(facet_by = "Timepoint",
              tax_aggregate = "Genus",
              showRemainingTaxa=TRUE,
              tax_show = 25)
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/bulk_time_heatmap.png", width = 13, height = 8, print(bulk_time_heatmap))
```

```{r}
bulkheatmap <- d %>%
                amp_subset_samples(Treatment %in% "P30_no_plant") %>%
                amp_heatmap(facet_by = "Timepoint",
                  tax_aggregate = "Genus",
                  showRemainingTaxa=TRUE,
                  tax_show = 30)
                   ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Bulk_heatmap.png", width = 8, height = 8, print(bulkheatmap))
                   
```

```{r}
P30_early <- d %>%
  amp_subset_samples(Treatment %in% c("P30_-_early_harvest", "P30")) %>%
  amp_heatmap(facet_by = "Treatment",
              tax_aggregate = "Genus",
              showRemainingTaxa=TRUE,
              tax_show = 30)
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/P30+early_heatmap.png", width = 13, height = 8, print(P30_early))
```

```{r}
#| label: BOXPLOTS
mainboxplot2 <- d %>%
  amp_subset_samples(Treatment %in% c("P30", "P30_+_0.075_M_foliar_P", "P30_+_0.15_M_foliar_P", "P60")) %>%
  amp_subset_samples(Timepoint %in% "T2") %>%
  amp_boxplot(group_by = "Treatment",
              tax_aggregate = "Genus",
              tax_show = 10,
              tax_add = "Genus",
              plot_log = FALSE,
  )
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Mainboxplot2.png", width = 13, height = 8, print(mainboxplot))
```

a

```{r}
#| label: BOXPLOTS
Bulkboxplot2 <- d %>%
  amp_subset_samples(Treatment %in% c("P30", "P30_no_plant")) %>%
  amp_subset_samples(Timepoint %in% "T2") %>%
  amp_boxplot(group_by = "Treatment",
              tax_aggregate = "Genus",
              tax_show = 10,
              tax_add = "Genus",
              plot_log = TRUE,
  )
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/bulkboxplot2.png", width = 13, height = 8, print(Bulkboxplot2))
```

```{r}

tax_vector_P <- c("Pseudomonas", "Pantoea", "Massilia", "Paraburkholderia", "Beijerinckia", "Microbacterium", "Arthrobacter", "Trinickia", "Burkholderia", "Erwinia", "Enterobacteriaceae", "Bacilliaceae", "Paenibacillus", "Streptomyces", "Rhizobiaceae", "Burkholderiaceae")
d.P <- amp_filter_taxa(d,
                         tax_vector = tax_vector_P)

P_boxplot <- d.P %>%
  amp_subset_samples(Treatment %in% c("P30", "P30_+_0.075_M_foliar_P", "P30_+_0.15_M_foliar_P", "P60")) %>%
  amp_subset_samples(Timepoint %in% "T2") %>%
  amp_boxplot(group_by = "Treatment",
              tax_aggregate = "Genus",
              tax_show = 12,
              tax_add = "Genus",
              plot_log = TRUE,
  )
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/P_boxplot.png", width = 10, height = 8, dpi=600, print(P_boxplot))


```

```{r}



psviz <- subset_samples(ps, Treatment %in% c("P30", "P30_+_0.15_M_foliar_P"))
psviz <- subset_samples(ps, Timepoint %in% "T2")


psviz_prev10 <- psviz %>%
  # prepend the 1st letter of the rank to each tax_table entry, to ensure all are unique
  tax_prepend_ranks() %>%
  tax_transform(trans = "compositional", rank = "Genus") %>% 
  # for various statistical, biological, and practical reasons, let's strictly filter taxa
  tax_filter(min_prevalence = 0.3, use_counts = TRUE, min_total_abundance = 100)
#Proportional min_prevalence given: 0.2 --> min 20% of samples.

psfix_prev10

psfix_treeStats <- psfix_prev10 %>%
  # run all the statistical models
  taxatree_models(
    ranks = c("Phylum", "Class", "Order", "Family", "Genus"),
    trans = "log2", trans_args = list(add = "halfmin"),
    variables = "treatment_deseq2", type = lm # modelling function
  ) %>%
  # extract stats from the models
  taxatree_models2stats(.keep_models = TRUE) %>%
  # adjust the p values for multiple testing, within each rank
  taxatree_stats_p_adjust(method = "fdr", grouping = "rank")

```

```{r}

ps_core <- subset_samples(ps, Timepoint %in% "T2")
ps_core <- subset_samples(ps_core, Compartment %in% "Rhizoplane")
ps_core <- filter_taxa(ps_core, function(x) sum(x > 4) > (0.2*length(x)), TRUE)



ps_pca <- ps_core %>%
  tax_agg("Genus") %>%
  tax_transform("clr") %>%
  ord_calc(method = "PCA")
# ord_calc will automatically infer you want a "PCA" here
# specify explicitly with method = "PCA", or you can pick another method

# create plot
pca_plot <- ps_pca %>%
  ord_plot(
    plot_taxa = 1:8, colour = "Treatment", size = 1.5,
    tax_vec_length = 2,
    tax_lab_style = tax_lab_style(max_angle = 90, aspect_ratio = 0.5),
    auto_caption = 8
  )

# customise plot
customised_plot <- pca_plot +
  stat_ellipse(aes(linetype = Treatment, colour = Treatment), linewidth = 0.3) + # linewidth not size, since ggplot 3.4.0
  scale_colour_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_fixed(ratio = 1, clip = "off") # makes rotated labels align correctly

# show plot
ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/ordplot_viz.png", width = 10, height = 8, dpi=600, print(customised_plot))
```

```{r}


tab <- otu_table(ps)
tab <- round(tab, digits=0)
class(tab) <- "matrix" # as.matrix() will do nothing
## you get a warning here, but this is what we need to have
tab <- t(tab) # transpose observations to rows
rarecurve(t(tab), step=50, cex=0.5)
rarecurve(t(otu_table(ps)), step=50, cex=0.5)

#Rarecurve shows that all samples plateau, indicating that sequencing depth will not have a large effect on the diversity measures



```

```{r}

alphadiv <- d %>%
  amp_subset_samples(Treatment %in% c("P30_no_plant")) %>%
    amp_alphadiv(
    measure = c("shannon"),
    #rarefy = 36322,
    plot = TRUE,
    plot_group_by = "Timepoint")

ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Alphadiv_t1_bulk.png", width = 10, height = 8, dpi=800, print(alphadiv))

```

```{r}
#| label: Boxplot for select genera


ps_genus <- tax_glom(ps, taxrank = "Genus")
ps_rel <- transform_sample_counts(ps_genus, function(x) x / sum(x))
ps_melt <- psmelt(ps_rel)

target_genera <- c("Massilia", "Burkholderia-Caballeronia-Paraburkholderia", "Dyella", "Noviherbaspirillum", "Leifsonia", "Pseudomonas") 
target_treatments <- c("P30", "P30_+_0.075_M_foliar_P", "P30_+_0.15_M_foliar_P", "P60", "P30_no_plant")

# Filter data
ps_filtered <- ps_melt %>%
  filter(Genus %in% target_genera, Treatment %in% target_treatments)

# Plot
Boxplot_genus <- ggplot(ps_filtered, aes(x = Treatment, y = Abundance, fill = Treatment)) +
  geom_boxplot() +
  facet_wrap(~ Genus, scales = "free_y") +
  theme_bw() +
  labs(title = "Pattern of abundance for select genera",
       y = "Relative Abundance",
       x = "Treatment") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        strip.text = element_text(face = "bold"))


ggsave("C:/Users/KCL523/OneDrive - University of Copenhagen/DATA/Klara Plant P status/Boxplot_rel_noplant.png", width = 14, height = 6, bg='white', dpi=800, print(Boxplot_genus))

```

```{r}

```
